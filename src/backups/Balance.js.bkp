import React from "react";
import "../styles/Balance.css";
import Web3 from "web3";
import tokenLogo from "../token-logo.png";
import ethLogo from "../eth-logo.png";

function Balance(props) {
  //   const bal = () => {
  //     const ethBalance = window.web3.utils.toWei(props.EthBalance, "Ether");
  //     return ethBalance;
  //   };
  return (
    <div className="balance">
      <h4>WALLET BALANCE</h4>
      <table className="balance_table">
        <thead>
          <td>Logo</td>
          <td>Name</td>
          <td>Balance</td>
        </thead>
        <tbody>
          <tr>
            <td>
              <img src={ethLogo} height="32" alt="" />
            </td>
            <td>ETH</td>
            <td>{window.web3.utils.fromWei(props.EthBalance, "Ether")}</td>
          </tr>
          <td>
            <img src={tokenLogo} height="32" alt="" />
          </td>
          <td>DApp</td>
          <td>{window.web3.utils.fromWei(props.TokenBalance, "Ether")}</td>
          {/* {props.Account} */}
        </tbody>
      </table>
    </div>
  );
}

export default Balance;

import React, { useState, useEffect } from "react";
import "../styles/Balance.css";
import Web3 from "web3";
import tokenLogo from "../token-logo.png";
import ethLogo from "../eth-logo.png";
import { ethers } from "ethers";
const axios = require("axios");
import "../artifacts/contractAddresses.json";
const providers = new ethers.providers.EtherscanProvider(
  "ropsten",
  "Y2538JXAEWASRXPFIGPYRT35X6ACHVHFTP"
);
function Balance(props) {
  const [iCoin, setICoin] = useState([
    "Tether",
    "USD Coin",
    "Chainlink",
    "Binance USD",
    "Uniswap",
    "Wrapped Bitcoin",
    "Crypto.com Coin",
    "FTX Token",
    "Dai",
    "Decentraland",
    "The Graph",
    "Aave",
    "Loopring",
    "Quant",
    "Chiliz",
    "UNUS SED LEO",
    "Maker",
    "Enjin Coin",
    "BitTorrent",
    "Amp",
    "DApp",
    "Ether",
  ]);

  useEffect(() => {
    const bal = () => {
      console.log("balances, contract address:", iCoin);
    };
    bal();
  }, []);

  //     const ethBalance = window.web3.utils.toWei(props.EthBalance, "Ether");
  //     return ethBalance;
  //   };
  // const PRIVATE_KEY =
  //   "4d150c6e84831746dff4c413d18eba85ae7bcefb0915874bedbc46750972fafe"; // Eg. 0x40ddbce3c7df9ab8d507d6b4af3861d224711b35299470ab7a217f780fe696cd
  // const USER_WALLET = new ethers.Wallet(PRIVATE_KEY, providers);
  // console.log("user wallet:", USER_WALLET);
  // console.log("providers", providers);

  // axios({
  //   // method: "get",
  //   url:
  //     "https://web3api.io/api/v1/tokens/0x5757EA38D1e1B2Da8852F91b05dd6174DE21c228/holders/historical?timeFrame=30d",
  //   headers: {
  //     "x-api-key": "2823743431msha7cb218cdebfa90p1e93b5jsn12f99e7c2c3c",
  //   },
  // }).then((res) => {
  //   console.log("res:", res);
  //   // res data example:
  //   // {
  //   //   "metadata": {
  //   //     "columns": ["timestamp", "timestamp.holder*"]
  //   //   },
  //   //   "data": [{
  //   //     "timestamp": 1551571200000,
  //   //     "0x3f5ce5fbfe3e9af3971dd833d26ba9b5c936f0be": 5.124709176050061e+27
  //   //   },
  //   //   ...
  //   //   ]
  //   // }
  // });
  // fetch("https://etherscan.io/tokens").then((resp) => {
  //   console.log("tokens:", resp);
  // });

  // });
  // let balancePromise = USER_WALLET.getBalance();

  // balancePromise.then((balance) => {
  //   console.log(balance);
  // });
  return (
    <div className="balance">
      <h4>WALLET BALANCE </h4>
      <table className="balance_table">
        <thead>
          <td>Logo</td>
          <td>Name</td>
          <td>Balance</td>
        </thead>
        <tbody>
          <tr>
            <td>
              <img src={ethLogo} height="32" alt="" />
            </td>
            <td>ETH</td>
            <td>{window.web3.utils.fromWei(props.EthBalance, "Ether")}</td>
          </tr>
          <td>
            <img src={tokenLogo} height="32" alt="" />
          </td>
          <td>DApp</td>
          <td>{window.web3.utils.fromWei(props.TokenBalance, "Ether")}</td>
          {/* {props.Account} */}
        </tbody>
      </table>
    </div>
  );
}

export default Balance;











import React, { useState, useEffect, useRef } from "react";
import "../styles/Balance.css";
import Web3 from "web3";
import tokenLogo from "../token-logo.png";
import ethLogo from "../eth-logo.png";
import { ethers } from "ethers";
import contractAddress from "../artifacts/contractAddresses.json";
import Token from "../abis/Token.json";

const axios = require("axios");

const providers = new ethers.providers.EtherscanProvider(
  "ropsten",
  "Y2538JXAEWASRXPFIGPYRT35X6ACHVHFTP"
);

function Balance(props) {
  const [tokens, setTokens] = useState([]);
  const [contractAddr, setContractAddr] = useState([]);
  const [balan, setBalan] = useState(undefined);

  const [iCoin, setICoin] = useState([
    "Tether",
    "USD Coin",
    "Chainlink",
    "Binance USD",
    "Uniswap",
    "Wrapped Bitcoin",
    "Crypto.com Coin",
    "FTX Token",
    "Dai",
    "Decentraland",
    "The Graph",
    "Aave",
    "Loopring",
    "Quant",
    "Chiliz",
    "UNUS SED LEO",
    "Maker",
    "Enjin Coin",
    "BitTorrent",
    "Amp",
    "DApp",
    "Ether",
  ]);
  // const isInitialMount = useRef(true);
  useEffect(() => {
    // if (isInitialMount.current) {
    //   isInitialMount.current = false;
    // } else {
    //   // Your useEffect code here to be run on update

    async function f3() {
      await f2();
      await bal();
    }
    return f3();
    // }
  });
  const f2 = async () => {
    Object.keys(contractAddress).map((keyN) => {
      const dayTasks = contractAddress[keyN];
      return Object.keys(dayTasks).map(async (key) => {
        const task = dayTasks[key];
        console.log("token data : ", task, keyN);
        setTokens(...tokens, keyN);
        setContractAddr(...contractAddr, {
          token: keyN,
          addr: task.toString(),
          // bal:""
        });
      });
    });
  };

  const bal = async () => {
    const web3 = await window.web3;
    console.log("balances, contract address:", contractAddr);
    // await f2();
    // console.log("contract address element:", key, el, val);
    const token = await new web3.eth.Contract(Token.abi, contractAddr[0]);
    let tokenBalance = token.methods.balanceOf(props.Account).call();
    setBalan({
      token: contractAddr.token,
      balance: tokenBalance,
    });
    // console.log("token balance:", tokenBalance.toString());
  };
  // useEffect(() => {
  //   const bal = () => {
  //     console.log("balances, contract address:", props);
  //     {
  //       Object.keys(contractAddress).map((keyN) => {
  //         const dayTasks = contractAddress[keyN];
  //         return Object.keys(dayTasks).map((key) => {
  //           const task = dayTasks[key];
  //           return console.log("task:", keyN, task);
  //         });
  //       });
  //     }
  //     // console.log("contract address element:", key, el, val);
  //   };

  //   bal();
  // }, []);

  //     const ethBalance = window.web3.utils.toWei(props.EthBalance, "Ether");
  //     return ethBalance;
  //   };
  // const PRIVATE_KEY =
  //   "4d150c6e84831746dff4c413d18eba85ae7bcefb0915874bedbc46750972fafe"; // Eg. 0x40ddbce3c7df9ab8d507d6b4af3861d224711b35299470ab7a217f780fe696cd
  // const USER_WALLET = new ethers.Wallet(PRIVATE_KEY, providers);
  // console.log("user wallet:", USER_WALLET);
  // console.log("providers", providers);

  // axios({
  //   // method: "get",
  //   url:
  //     "https://web3api.io/api/v1/tokens/0x5757EA38D1e1B2Da8852F91b05dd6174DE21c228/holders/historical?timeFrame=30d",
  //   headers: {
  //     "x-api-key": "2823743431msha7cb218cdebfa90p1e93b5jsn12f99e7c2c3c",
  //   },
  // }).then((res) => {
  //   console.log("res:", res);
  //   // res data example:
  //   // {
  //   //   "metadata": {
  //   //     "columns": ["timestamp", "timestamp.holder*"]
  //   //   },
  //   //   "data": [{
  //   //     "timestamp": 1551571200000,
  //   //     "0x3f5ce5fbfe3e9af3971dd833d26ba9b5c936f0be": 5.124709176050061e+27
  //   //   },
  //   //   ...
  //   //   ]
  //   // }
  // });
  // fetch("https://etherscan.io/tokens").then((resp) => {
  //   console.log("tokens:", resp);
  // });

  // });
  // let balancePromise = USER_WALLET.getBalance();

  // balancePromise.then((balance) => {
  //   console.log(balance);
  // });
  return (
    <div className="balance">
      <h4>WALLET BALANCE</h4>
      <table className="balance_table">
        <thead>
          <td>Logo</td>
          <td>Name</td>
          <td>Balance</td>
        </thead>
        <tbody>
          <tr>
            <td>
              <img src={ethLogo} height="32" alt="" />
            </td>
            <td>ETH</td>
            <td>{window.web3.utils.fromWei(props.EthBalance, "Ether")}</td>
          </tr>
          <td>
            <img src={tokenLogo} height="32" alt="" />
          </td>
          <td>DApp</td>
          <td>{window.web3.utils.fromWei(props.TokenBalance, "Ether")}</td>
          {/* {props.Account} */}
        </tbody>
      </table>
    </div>
  );
}

export default Balance;
